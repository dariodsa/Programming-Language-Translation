KR_INT 1 int
IDN 1 z
OP_PRIDRUZI 1 =
BROJ 1 3
TOCKAZAREZ 1 ;
KR_INT 2 int
IDN 2 sa
OP_PRIDRUZI 2 =
L_ZAGRADA 2 (
KR_INT 2 int
D_ZAGRADA 2 )
ZNAK 2 'a'
TOCKAZAREZ 2 ;
KR_INT 3 int
IDN 3 x
OP_PRIDRUZI 3 =
BROJ 3 1
TOCKAZAREZ 3 ;
KR_INT 4 int
IDN 4 y
OP_PRIDRUZI 4 =
BROJ 4 4
TOCKAZAREZ 4 ;
KR_CHAR 5 char
IDN 5 q
OP_PRIDRUZI 5 =
ZNAK 5 'v'
TOCKAZAREZ 5 ;
KR_CONST 6 const
KR_INT 6 int
IDN 6 broj
OP_PRIDRUZI 6 =
BROJ 6 5
TOCKAZAREZ 6 ;
KR_CONST 7 const
KR_CHAR 7 char
IDN 7 r
OP_PRIDRUZI 7 =
L_ZAGRADA 7 (
KR_CONST 7 const
KR_CHAR 7 char
D_ZAGRADA 7 )
IDN 7 z
TOCKAZAREZ 7 ;
KR_CONST 8 const
KR_INT 8 int
IDN 8 pa
OP_PRIDRUZI 8 =
L_ZAGRADA 8 (
KR_CONST 8 const
KR_INT 8 int
D_ZAGRADA 8 )
ZNAK 8 'a'
TOCKAZAREZ 8 ;
KR_CHAR 9 char
IDN 9 t
OP_PRIDRUZI 9 =
L_ZAGRADA 9 (
KR_CHAR 9 char
D_ZAGRADA 9 )
L_ZAGRADA 9 (
L_ZAGRADA 9 (
KR_CONST 9 const
KR_INT 9 int
D_ZAGRADA 9 )
BROJ 9 300
D_ZAGRADA 9 )
TOCKAZAREZ 9 ;
KR_INT 10 int
IDN 10 p
OP_PRIDRUZI 10 =
L_ZAGRADA 10 (
KR_INT 10 int
D_ZAGRADA 10 )
L_ZAGRADA 10 (
KR_CHAR 10 char
D_ZAGRADA 10 )
L_ZAGRADA 10 (
KR_CONST 10 const
KR_INT 10 int
D_ZAGRADA 10 )
L_ZAGRADA 10 (
KR_CONST 10 const
KR_CHAR 10 char
D_ZAGRADA 10 )
L_ZAGRADA 10 (
IDN 10 x
PLUS 10 +
IDN 10 y
D_ZAGRADA 10 )
TOCKAZAREZ 10 ;
KR_INT 11 int
IDN 11 po
L_ZAGRADA 11 (
KR_INT 11 int
IDN 11 q
ZAREZ 11 ,
KR_CHAR 11 char
IDN 11 p
D_ZAGRADA 11 )
L_VIT_ZAGRADA 11 {
KR_INT 12 int
IDN 12 ba
TOCKAZAREZ 12 ;
KR_INT 13 int
IDN 13 a
L_UGL_ZAGRADA 13 [
BROJ 13 10
D_UGL_ZAGRADA 13 ]
OP_PRIDRUZI 13 =
NIZ_ZNAKOVA 13 "abc"
TOCKAZAREZ 13 ;
KR_INT 14 int
IDN 14 b
L_UGL_ZAGRADA 14 [
BROJ 14 10
D_UGL_ZAGRADA 14 ]
OP_PRIDRUZI 14 =
L_VIT_ZAGRADA 14 {
ZNAK 14 'a'
ZAREZ 14 ,
ZNAK 14 'b'
ZAREZ 14 ,
ZNAK 14 'c'
ZAREZ 14 ,
ZNAK 14 '\0'
D_VIT_ZAGRADA 14 }
TOCKAZAREZ 14 ;
KR_INT 15 int
IDN 15 c
L_UGL_ZAGRADA 15 [
BROJ 15 10
D_UGL_ZAGRADA 15 ]
OP_PRIDRUZI 15 =
L_VIT_ZAGRADA 15 {
BROJ 15 97
ZAREZ 15 ,
BROJ 15 98
ZAREZ 15 ,
BROJ 15 99
ZAREZ 15 ,
BROJ 15 0
D_VIT_ZAGRADA 15 }
TOCKAZAREZ 15 ;
KR_INT 16 int
IDN 16 d
L_UGL_ZAGRADA 16 [
BROJ 16 10
D_UGL_ZAGRADA 16 ]
OP_PRIDRUZI 16 =
IDN 16 a
TOCKAZAREZ 16 ;
IDN 17 ba
OP_PRIDRUZI 17 =
BROJ 17 5
PLUS 17 +
IDN 17 q
PLUS 17 +
IDN 17 p
TOCKAZAREZ 17 ;
KR_RETURN 18 return
BROJ 18 789
TOCKAZAREZ 18 ;
D_VIT_ZAGRADA 19 }
KR_INT 20 int
IDN 20 fun
L_ZAGRADA 20 (
KR_INT 20 int
IDN 20 qa
ZAREZ 20 ,
KR_INT 20 int
IDN 20 pa
ZAREZ 20 ,
KR_INT 20 int
IDN 20 aa
D_ZAGRADA 20 )
L_VIT_ZAGRADA 21 {
KR_CHAR 22 char
IDN 22 a
L_UGL_ZAGRADA 22 [
BROJ 22 10
D_UGL_ZAGRADA 22 ]
OP_PRIDRUZI 22 =
NIZ_ZNAKOVA 22 "abc"
TOCKAZAREZ 22 ;
KR_CONST 23 const
KR_CHAR 23 char
IDN 23 b
L_UGL_ZAGRADA 23 [
BROJ 23 10
D_UGL_ZAGRADA 23 ]
OP_PRIDRUZI 23 =
L_VIT_ZAGRADA 23 {
ZNAK 23 'a'
ZAREZ 23 ,
ZNAK 23 'b'
ZAREZ 23 ,
ZNAK 23 'c'
ZAREZ 23 ,
ZNAK 23 '\0'
D_VIT_ZAGRADA 23 }
TOCKAZAREZ 23 ;
KR_RETURN 25 return
BROJ 25 9
TOCKAZAREZ 25 ;
D_VIT_ZAGRADA 26 }
KR_INT 27 int
IDN 27 main
L_ZAGRADA 27 (
KR_VOID 27 void
D_ZAGRADA 27 )
L_VIT_ZAGRADA 27 {
KR_INT 28 int
IDN 28 x
OP_PRIDRUZI 28 =
IDN 28 q
PLUS 28 +
BROJ 28 5
TOCKAZAREZ 28 ;
KR_INT 29 int
IDN 29 y
OP_PRIDRUZI 29 =
BROJ 29 6
PLUS 29 +
IDN 29 z
TOCKAZAREZ 29 ;
IDN 30 y
OP_PRIDRUZI 30 =
IDN 30 x
PLUS 30 +
BROJ 30 2
TOCKAZAREZ 30 ;
IDN 31 y
OP_PRIDRUZI 31 =
IDN 31 po
L_ZAGRADA 31 (
BROJ 31 1
ZAREZ 31 ,
BROJ 31 56
D_ZAGRADA 31 )
TOCKAZAREZ 31 ;
KR_RETURN 32 return
IDN 32 fun
L_ZAGRADA 32 (
IDN 32 x
ZAREZ 32 ,
IDN 32 y
ZAREZ 32 ,
IDN 32 x
PLUS 32 +
IDN 32 y
D_ZAGRADA 32 )
TOCKAZAREZ 32 ;
KR_RETURN 33 return
BROJ 33 0
TOCKAZAREZ 33 ;
D_VIT_ZAGRADA 34 }
