   MOVE 40000, R7 ; normalni stog
   MOVE 30000, R5 ; sluzi za povratne adrese
   MOVE 22000, R4 ; sluzi za djelokrug 
   MOVE 10000, R3 ; sluzi za lokalne varijable
   MOVE R3, R0
   ADD R4, 4, R4
   STORE R0, (R4)
   CALL I_init
   HALT
G_x DW %D 0
   MOVE G_x, R0
   PUSH R0
   MOVE %D 2 , R0 ; primarni izraz broj
   PUSH R0
   POP R1 ; uzimam vrijednost
   POP R0 ; uzimam adresu
   STORE R1, (R0) ; spremam 
   RET
G_y DW %D 0
   MOVE G_y, R0
   PUSH R0
   MOVE %D 3 , R0 ; primarni izraz broj
   PUSH R0
   POP R1 ; uzimam vrijednost
   POP R0 ; uzimam adresu
   STORE R1, (R0) ; spremam 
   RET
F_main 
   POP R0
   ADD R5, 4 , R5
   STORE R0, (R5)
IF_1 
   LOAD R0, (G_x)
   PUSH R0
   LOAD R0, (G_y)
   PUSH R0
   POP R0
   POP R1
   CMP R1,R0
   JP_SLT dalje0
   MOVE 0,R0
   PUSH R0
   JP gotovo0
dalje0 
   MOVE 1,R0
   PUSH R0
gotovo0 
   POP R0
   CMP R0,0
   JP_EQ IF_1_KRAJ
   MOVE G_x, R0
   PUSH R0
   POP R0
   LOAD R1, (R0)
   ADD R1, %D 1, R1
   STORE R1, (R0)
   PUSH R1
   ADD R3 , %D 0 , R3 
   JP IF_ELSE_1
IF_1_KRAJ 
IF_2 
   LOAD R0, (G_x)
   PUSH R0
   LOAD R0, (G_y)
   PUSH R0
   POP R0
   POP R1
   CMP R1,R0
   JP_SLT dalje1
   MOVE 0,R0
   PUSH R0
   JP gotovo1
dalje1 
   MOVE 1,R0
   PUSH R0
gotovo1 
   POP R0
   CMP R0,0
   JP_EQ IF_2_KRAJ
   MOVE G_x, R0
   PUSH R0
   POP R0
   LOAD R1, (R0)
   ADD R1, %D 1, R1
   STORE R1, (R0)
   PUSH R1
   ADD R3 , %D 0 , R3 
   JP IF_ELSE_2
IF_2_KRAJ 
IF_3 
   LOAD R0, (G_x)
   PUSH R0
   LOAD R0, (G_y)
   PUSH R0
   POP R0
   POP R1
   CMP R1,R0
   JP_SLT dalje2
   MOVE 0,R0
   PUSH R0
   JP gotovo2
dalje2 
   MOVE 1,R0
   PUSH R0
gotovo2 
   POP R0
   CMP R0,0
   JP_EQ IF_3_KRAJ
   MOVE G_x, R0
   PUSH R0
   POP R0
   LOAD R1, (R0)
   ADD R1, %D 1, R1
   STORE R1, (R0)
   PUSH R1
   ADD R3 , %D 0 , R3 
IF_3_KRAJ 
IF_ELSE_2 
IF_ELSE_1 
   LOAD R0, (G_x)
   PUSH R0
   POP R0
   MOVE R0,R6
   LOAD R0, (R5)
   SUB R5, 4, R5
   PUSH R0
   ADD R3, %D 0, R3 ;pomak
   RET
   ADD R3 , %D 0 , R3 
I_init
   CALL G_x
   CALL G_y
   CALL F_main
   HALT
MUL  POP R0  ;MNOZENJE
   ADD R5, 4 , R5
   STORE R0, (R5)
   POP R1
   POP R0
   MOVE 0, R2
   CMP R0, 0
   JP_Z GOTOVP
   CMP R1, 0
   JP_Z GOTOVP
   MOVE R0,R2
   CMP R1, 0
   JP_N OPETN
OPETP SUB R1,%D 1,R1
   JP_Z GOTOVP
   ADD R2,R0,R2
   JP OPETP
OPETN ADD R1, 1, R1
   JP_Z GOTOVN
   ADD R2,R0,R2
   JP OPETN
GOTOVP   
   MOVE R2, R6
   LOAD R0, (R5)
   SUB R5, 4, R5
   PUSH R0
   RET
GOTOVN XOR R2, -1, R2
   ADD R2, 1, R2
   MOVE R2, R6
   LOAD R0, (R5)
   SUB R5, 4, R5
   PUSH R0
   RET
MOD POP R0
   ADD R5, 4 , R5
   STORE R0, (R5)
   POP R0
   POP R1
   MOVE 0, R2
H_PETLJA SUB R0, R1, R0 ; oduzeti djelitelj od djeljenika
   JR_ULT H_GOTOVO ; ako nije uspjelo, onda je kraj
   ADD R2, 1, R2 ; ako je uspjelo, pove?ati rezultat
   JR H_PETLJA
H_GOTOVO ADD R0,R1,R0
   MOVE R0, R6 ; spremiti rezultat
   LOAD R0, (R5)
   SUB R5, 4, R5
   PUSH R0
   RET
DIV POP R0
   ADD R5, 4 , R5
   STORE R0, (R5)
   POP R1
   POP R0
   MOVE 0, R2
   CMP R0, R2
   JP_N neg1
   JP pr3
   MOVE 0, R2 ; rezultat dijeljenja
neg1 XOR R0, -1, R0
   ADD R0, 1, R0
   MOVE 0, R2
pr2  CMP R1, R2
   JP_N neg2
   JP PETLJA2
neg2 XOR R1, -1, R1
   ADD R1, 1, R1
   MOVE 0, R2
   JP PETLJA
pr3 MOVE 0, R2
   CMP R1, R2
   JP_N neg3
   JP PETLJA
neg3 XOR R1, -1, R1
   ADD R1, 1, R1
   MOVE 0, R2
   JP PETLJA2
PETLJA SUB R0, R1, R0 ; oduzeti djelitelj od djeljenika
   JR_ULT GOTOVOP ; ako nije uspjelo, onda je kraj
   ADD R2, 1, R2 ; ako je uspjelo, pove?ati rezultat
   JR PETLJA
PETLJA2 SUB R0, R1, R0 ; oduzeti djelitelj od djeljenika
   JR_ULT GOTOVON ; ako nije uspjelo, onda je kraj
   ADD R2, 1, R2 ; ako je uspjelo, pove?ati rezultat
   JR PETLJA2
GOTOVOP
   MOVE R2, R6
   LOAD R0, (R5)
   SUB R5, 4, R5
   PUSH R0
   RET
GOTOVON
   XOR R2, -1, R2
   ADD R2, 1, R2
   MOVE R2, R6
   LOAD R0, (R5)
   SUB R5, 4, R5
   PUSH R0
   RET
