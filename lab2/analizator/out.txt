KR_INT 2 int
IDN 2 main
L_ZAGRADA 2 (
KR_INT 2 int
IDN 2 broj
ZAREZ 2 ,
KR_INT 2 int
IDN 2 q
D_ZAGRADA 2 )
TOCKAZAREZ 2 ;
KR_INT 3 int
IDN 3 fa
L_ZAGRADA 3 (
KR_INT 3 int
IDN 3 q
D_ZAGRADA 3 )
TOCKAZAREZ 3 ;
KR_INT 4 int
IDN 4 fact
L_ZAGRADA 4 (
KR_INT 4 int
IDN 4 n
D_ZAGRADA 4 )
L_VIT_ZAGRADA 4 {
KR_IF 5 if
L_ZAGRADA 5 (
IDN 5 n
OP_GT 5 >
BROJ 5 0
D_ZAGRADA 5 )
L_VIT_ZAGRADA 5 {
KR_RETURN 6 return
IDN 6 n
OP_PUTA 6 *
IDN 6 fact
L_ZAGRADA 6 (
IDN 6 n
MINUS 6 -
BROJ 6 1
D_ZAGRADA 6 )
TOCKAZAREZ 6 ;
D_VIT_ZAGRADA 7 }
KR_ELSE 7 else
L_VIT_ZAGRADA 7 {
KR_INT 8 int
IDN 8 q
OP_PRIDRUZI 8 =
IDN 8 fa
L_ZAGRADA 8 (
BROJ 8 56
D_ZAGRADA 8 )
TOCKAZAREZ 8 ;
KR_RETURN 9 return
BROJ 9 1
TOCKAZAREZ 9 ;
D_VIT_ZAGRADA 10 }
D_VIT_ZAGRADA 11 }
KR_INT 12 int
IDN 12 fa
L_ZAGRADA 12 (
KR_INT 12 int
IDN 12 br
D_ZAGRADA 12 )
L_VIT_ZAGRADA 13 {
KR_IF 14 if
L_ZAGRADA 14 (
IDN 14 br
OP_EQ 14 ==
BROJ 14 0
D_ZAGRADA 14 )
L_VIT_ZAGRADA 15 {
KR_INT 16 int
IDN 16 q
OP_PRIDRUZI 16 =
BROJ 16 56
PLUS 16 +
ZNAK 16 'q'
PLUS 16 +
ZNAK 16 '\t'
PLUS 16 +
ZNAK 16 '\0'
PLUS 16 +
ZNAK 16 '\''
PLUS 16 +
ZNAK 16 '\"'
PLUS 16 +
ZNAK 16 '\\'
TOCKAZAREZ 16 ;
KR_INT 17 int
IDN 17 p
OP_PRIDRUZI 17 =
IDN 17 fa
L_ZAGRADA 17 (
ZNAK 17 'q'
D_ZAGRADA 17 )
TOCKAZAREZ 17 ;
IDN 18 main
L_ZAGRADA 18 (
BROJ 18 56
ZAREZ 18 ,
ZNAK 18 'a'
D_ZAGRADA 18 )
TOCKAZAREZ 18 ;
KR_RETURN 19 return
BROJ 19 0
TOCKAZAREZ 19 ;
D_VIT_ZAGRADA 20 }
KR_ELSE 21 else
KR_RETURN 21 return
IDN 21 fa
L_ZAGRADA 21 (
IDN 21 br
MINUS 21 -
BROJ 21 1
D_ZAGRADA 21 )
TOCKAZAREZ 21 ;
D_VIT_ZAGRADA 22 }
KR_INT 23 int
IDN 23 main
L_ZAGRADA 23 (
KR_VOID 23 void
D_ZAGRADA 23 )
L_VIT_ZAGRADA 24 {
KR_INT 25 int
IDN 25 x
OP_PRIDRUZI 25 =
BROJ 25 45666665
TOCKAZAREZ 25 ;
KR_INT 26 int
IDN 26 y
OP_PRIDRUZI 26 =
BROJ 26 6
TOCKAZAREZ 26 ;
KR_INT 27 int
IDN 27 arr
L_UGL_ZAGRADA 27 [
BROJ 27 5125
D_UGL_ZAGRADA 27 ]
TOCKAZAREZ 27 ;
KR_INT 28 int
IDN 28 a
OP_PRIDRUZI 28 =
IDN 28 x
PLUS 28 +
IDN 28 y
TOCKAZAREZ 28 ;
KR_INT 29 int
IDN 29 p
OP_PRIDRUZI 29 =
IDN 29 arr
L_UGL_ZAGRADA 29 [
BROJ 29 4546
D_UGL_ZAGRADA 29 ]
TOCKAZAREZ 29 ;
KR_INT 30 int
IDN 30 i
OP_PRIDRUZI 30 =
BROJ 30 0
TOCKAZAREZ 30 ;
KR_FOR 31 for
L_ZAGRADA 31 (
IDN 31 i
OP_PRIDRUZI 31 =
BROJ 31 0
TOCKAZAREZ 31 ;
IDN 31 i
OP_LT 31 <
IDN 31 a
TOCKAZAREZ 31 ;
OP_INC 31 ++
IDN 31 i
D_ZAGRADA 31 )
L_VIT_ZAGRADA 32 {
KR_CHAR 33 char
IDN 33 q
OP_PRIDRUZI 33 =
L_ZAGRADA 33 (
KR_CHAR 33 char
D_ZAGRADA 33 )
BROJ 33 63
TOCKAZAREZ 33 ;
KR_INT 34 int
IDN 34 p
OP_PRIDRUZI 34 =
BROJ 34 0
TOCKAZAREZ 34 ;
KR_INT 35 int
IDN 35 y
OP_PRIDRUZI 35 =
IDN 35 q
PLUS 35 +
IDN 35 p
TOCKAZAREZ 35 ;
KR_IF 36 if
L_ZAGRADA 36 (
IDN 36 i
OP_EQ 36 ==
BROJ 36 10
D_ZAGRADA 36 )
L_VIT_ZAGRADA 37 {
KR_BREAK 38 break
TOCKAZAREZ 38 ;
D_VIT_ZAGRADA 39 }
KR_WHILE 40 while
L_ZAGRADA 40 (
IDN 40 p
OP_LT 40 <
BROJ 40 100
D_ZAGRADA 40 )
L_VIT_ZAGRADA 41 {
OP_INC 42 ++
IDN 42 p
TOCKAZAREZ 42 ;
D_VIT_ZAGRADA 43 }
D_VIT_ZAGRADA 45 }
KR_RETURN 47 return
BROJ 47 0
TOCKAZAREZ 47 ;
D_VIT_ZAGRADA 48 }
